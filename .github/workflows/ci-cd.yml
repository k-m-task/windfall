name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build and test with Maven
      run: |
        cd backend
        mvn clean verify
    
    - name: Upload backend artifacts
      uses: actions/upload-artifact@v3
      with:
        name: backend-artifacts
        path: backend/target/*.jar

  build-and-test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock
    
    - name: Install dependencies
      run: |
        cd frontend
        yarn install --frozen-lockfile
    
    - name: Build and test
      run: |
        cd frontend
        yarn test
        yarn build
    
    - name: Upload frontend artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-artifacts
        path: frontend/dist

  build-docker-images:
    needs: [build-and-test-backend, build-and-test-frontend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download backend artifacts
      uses: actions/download-artifact@v3
      with:
        name: backend-artifacts
        path: backend/target
    
    - name: Download frontend artifacts
      uses: actions/download-artifact@v3
      with:
        name: frontend-artifacts
        path: frontend/dist
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push backend image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/windfall-backend:latest
    
    - name: Build and push frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/windfall-frontend:latest

  # Uncomment when ready to deploy to Kubernetes
  # deploy:
  #   needs: build-docker-images
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   
  #   steps:
  #   - uses: actions/checkout@v3
  #   
  #   - name: Set up kubectl
  #     uses: azure/setup-kubectl@v3
  #   
  #   - name: Configure kubectl
  #     run: |
  #       mkdir -p $HOME/.kube
  #       echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
  #       chmod 600 $HOME/.kube/config
  #   
  #   - name: Deploy to Kubernetes
  #     run: |
  #       kubectl apply -f kubernetes/
  #       kubectl rollout restart deployment windfall-backend
  #       kubectl rollout restart deployment windfall-frontend
